rm(list=ls())
dic_function=function(dados,signif=0.05){
  HSD.test=function (y, trt, DFerror, MSerror, alpha = 0.05,
                     main = NULL, console = FALSE){
    name.y <- paste(deparse(substitute(y)))
    name.t <- paste(deparse(substitute(trt)))
    if (is.null(main))
      main <- paste(name.y, "~", name.t)
    clase <- c("aov", "lm")
    if ("aov" %in% class(y) | "lm" %in% class(y)) {
      if (is.null(main))
        main <- y$call
      junto <- y$model
      colnames(junto)=c("y","trt")
      DFerror <- df.residual(y)
      MSerror <- deviance(y)/DFerror
    }
    ntr <- nlevels(as.factor(junto$trt))
    Tprob <- qtukey(1 - alpha, ntr, DFerror)
    nr <- unique(table(junto[, 2]))
    HSD <- Tprob * sqrt(MSerror/nr)}
  d2=t(as.data.frame(dados[[1]][[1]]$Dados))
  trat=rep(rownames(d2),e=ncol(d2))
  ntrat=length(unique(trat))
  nlist=length(dados)
  posthoc=as.list(1:nlist)
  nomes=1:nlist
  resid=as.list(1:nlist)
  for(i in 1:nlist){
    data=data.frame(dados[[i]][[1]]$Dados)
    resp=unlist(data)
    trat=rep(colnames(data),e=nrow(data))
    if(length(signif)=="1"){signif=rep(signif,nlist)}

    if(sd(resp)!=0){
    a=easyanova::ea1(data.frame(trat,resp),design = 1,alpha = signif[i])
    ta=as.factor(trat)
    mod=aov(resp~ta)
    DMSTukey=(HSD.test(mod,"ta"))#$statistics$MSD
    rownames(a$Means)=a$Means$treatment
    a$Means=a$Means[unique(trat),]
    medias=a$Means$mean
    letrastukey=a$Means$tukey
    letrasduncan=a$Means$duncan
    letrassk=a$Means$scott_knott
    posthoc[[i]]=as.list(data.frame("Trat"=a$Means$treatment,
                                    "Médias"=medias,
                                    "Tukey"=letrastukey,
                                    "Duncan"=letrasduncan,
                                    "SK"=letrassk))
    posthoc[[i]]$CV=a$`Residual analysis`$`residual analysis`[3]
    posthoc[[i]]$QMres=a$`Analysis of variance`$`type I SS`[1]
    posthoc[[i]]$`p-valor`=as.numeric(a$`Analysis of variance`$`p>F`[1])
    posthoc[[i]]$alpha=signif[i]
    posthoc[[i]]$DMSTukey=DMSTukey
    nomes[i]=dados[[i]][[1]]$Nome}

    if(sd(resp)==0){
      media=tapply(resp,trat,mean)
      letrastukey=rep("a",length(media))
      letrasduncan=rep("a",length(media))
      letrassk=rep("a",length(media))
      posthoc[[i]]=as.list(data.frame("Trat"=names(media),
                                      "Médias"=media,
                                      "Tukey"=letrastukey,
                                      "Duncan"=letrasduncan,
                                      "SK"=letrassk))
      posthoc[[i]]$CV=0
      posthoc[[i]]$QMres=0
      posthoc[[i]]$`p-valor`=1
      posthoc[[i]]$alpha=signif[i]
      posthoc[[i]]$DMSTukey=NA
      nomes[i]=dados[[i]][[1]]$Nome}
    }
  names(posthoc)=nomes
  posthoc
}

setwd("C:/Users/Gabriel/OneDrive - uel.br/2021/2021 - CURSO(FITOVISION)")
library(RJSONIO)
dados=RJSONIO::fromJSON("example.json")
dados[[1]]$Avaliacao2$Dados$T1=c(0,0,0,0)
dados[[1]]$Avaliacao2$Dados$T2=c(0,0,0,0)
dados[[1]]$Avaliacao2$Dados$T3=c(0,0,0,0)
dados[[1]]$Avaliacao2$Dados$T4=c(0,0,0,0)
dados[[1]]$Avaliacao2$Dados$T5=c(0,0,0,0)
dados[[1]]$Avaliacao2$Dados$T6=c(0,0,0,0)
a=dic_function(dados) # default 5%

jsonlite::write_json(a,"dic_function2.json")
